// this file was auto-generated by wrapit v1.3.1-dirty
#include "Wrapper.h"

#include "jlROOT2.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<TSignalHandler> : std::false_type { };
  template<> struct DefaultConstructible<TSignalHandler> : std::false_type { };
}

// Class generating the wrapper for type TSignalHandler
// signature to use in the veto file: TSignalHandler
struct JlTSignalHandler: public Wrapper {

  JlTSignalHandler(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TSignalHandler (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TSysEvtHandler.h:127:7
    jlcxx::TypeWrapper<TSignalHandler>  t = jlModule.add_type<TSignalHandler>("TSignalHandler");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TSignalHandler>>(new jlcxx::TypeWrapper<TSignalHandler>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TSignalHandler>> type_;
};
std::shared_ptr<Wrapper> newJlTSignalHandler(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTSignalHandler(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TStdExceptionHandler> : std::false_type { };
  template<> struct DefaultConstructible<TStdExceptionHandler> : std::false_type { };
}

// Class generating the wrapper for type TStdExceptionHandler
// signature to use in the veto file: TStdExceptionHandler
struct JlTStdExceptionHandler: public Wrapper {

  JlTStdExceptionHandler(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TStdExceptionHandler (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TSysEvtHandler.h:172:7
    jlcxx::TypeWrapper<TStdExceptionHandler>  t = jlModule.add_type<TStdExceptionHandler>("TStdExceptionHandler");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TStdExceptionHandler>>(new jlcxx::TypeWrapper<TStdExceptionHandler>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TStdExceptionHandler>> type_;
};
std::shared_ptr<Wrapper> newJlTStdExceptionHandler(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTStdExceptionHandler(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TTime> : std::false_type { };
  template<> struct DefaultConstructible<TTime> : std::false_type { };
}

// Class generating the wrapper for type TTime
// signature to use in the veto file: TTime
struct JlTTime: public Wrapper {

  JlTTime(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TTime (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TTime.h:27:7
    jlcxx::TypeWrapper<TTime>  t = jlModule.add_type<TTime>("TTime");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TTime>>(new jlcxx::TypeWrapper<TTime>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TTime>> type_;
};
std::shared_ptr<Wrapper> newJlTTime(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTTime(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TInetAddress> : std::false_type { };
  template<> struct DefaultConstructible<TInetAddress> : std::false_type { };
template<> struct SuperType<TInetAddress> { typedef TObject type; };
}

// Class generating the wrapper for type TInetAddress
// signature to use in the veto file: TInetAddress
struct JlTInetAddress: public Wrapper {

  JlTInetAddress(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TInetAddress (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TInetAddress.h:36:7
    jlcxx::TypeWrapper<TInetAddress>  t = jlModule.add_type<TInetAddress>("TInetAddress",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TInetAddress>>(new jlcxx::TypeWrapper<TInetAddress>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TInetAddress>> type_;
};
std::shared_ptr<Wrapper> newJlTInetAddress(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTInetAddress(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TVirtualPad> : std::false_type { };
  template<> struct DefaultConstructible<TVirtualPad> : std::false_type { };
template<> struct SuperType<TVirtualPad> { typedef TObject type; };
}

// Class generating the wrapper for type TVirtualPad
// signature to use in the veto file: TVirtualPad
struct JlTVirtualPad: public Wrapper {

  JlTVirtualPad(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TVirtualPad (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TVirtualPad.h:50:7
    jlcxx::TypeWrapper<TVirtualPad>  t = jlModule.add_type<TVirtualPad>("TVirtualPad",
      jlcxx::julia_base_type<TObject>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TVirtualPad>>(new jlcxx::TypeWrapper<TVirtualPad>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TVirtualPad>> type_;
};
std::shared_ptr<Wrapper> newJlTVirtualPad(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTVirtualPad(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TPad> : std::false_type { };
  template<> struct DefaultConstructible<TPad> : std::false_type { };
template<> struct SuperType<TPad> { typedef TVirtualPad type; };
}

// Class generating the wrapper for type TPad
// signature to use in the veto file: TPad
struct JlTPad: public Wrapper {

  JlTPad(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TPad (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TPad.h:28:7
    jlcxx::TypeWrapper<TPad>  t = jlModule.add_type<TPad>("TPad",
      jlcxx::julia_base_type<TVirtualPad>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TPad>>(new jlcxx::TypeWrapper<TPad>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TPad>> type_;
};
std::shared_ptr<Wrapper> newJlTPad(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTPad(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TCanvas> : std::false_type { };
  template<> struct DefaultConstructible<TCanvas> : std::false_type { };
template<> struct SuperType<TCanvas> { typedef TPad type; };
}

// Class generating the wrapper for type TCanvas
// signature to use in the veto file: TCanvas
struct JlTCanvas: public Wrapper {

  JlTCanvas(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TCanvas (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:23:7
    jlcxx::TypeWrapper<TCanvas>  t = jlModule.add_type<TCanvas>("TCanvas",
      jlcxx::julia_base_type<TPad>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TCanvas>>(new jlcxx::TypeWrapper<TCanvas>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TCanvas::TCanvas(Bool_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:100:4
    t.constructor<Bool_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TCanvas::TCanvas(const char *, const char *, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:101:4
    t.constructor<const char *>(/*finalize=*/true);
    t.constructor<const char *, const char *>(/*finalize=*/true);
    t.constructor<const char *, const char *, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TCanvas::TCanvas(const char *, const char *, Int_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:102:4
    t.constructor<const char *, const char *, Int_t, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TCanvas::TCanvas(const char *, const char *, Int_t, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:103:4
    t.constructor<const char *, const char *, Int_t, Int_t, Int_t, Int_t>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void TCanvas::TCanvas(const char *, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:105:4
    t.constructor<const char *, Int_t, Int_t, Int_t>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void TCanvas::Constructor() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Constructor()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:109:9
    t.method("Constructor", static_cast<void (TCanvas::*)() >(&TCanvas::Constructor));

    DEBUG_MSG("Adding wrapper for void TCanvas::Constructor(const char *, const char *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Constructor(const char *, const char *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:110:9
    t.method("Constructor", static_cast<void (TCanvas::*)(const char *, const char *, Int_t) >(&TCanvas::Constructor));

    DEBUG_MSG("Adding wrapper for void TCanvas::Constructor(const char *, const char *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Constructor(const char *, const char *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:111:9
    t.method("Constructor", static_cast<void (TCanvas::*)(const char *, const char *, Int_t, Int_t) >(&TCanvas::Constructor));

    DEBUG_MSG("Adding wrapper for void TCanvas::Constructor(const char *, const char *, Int_t, Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Constructor(const char *, const char *, Int_t, Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:112:9
    t.method("Constructor", static_cast<void (TCanvas::*)(const char *, const char *, Int_t, Int_t, Int_t, Int_t) >(&TCanvas::Constructor));

    DEBUG_MSG("Adding wrapper for void TCanvas::Destructor() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Destructor()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:114:9
    t.method("Destructor", static_cast<void (TCanvas::*)() >(&TCanvas::Destructor));

    DEBUG_MSG("Adding wrapper for TVirtualPad * TCanvas::cd(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: TVirtualPad * TCanvas::cd(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:116:22
    t.method("cd", static_cast<TVirtualPad * (TCanvas::*)(Int_t) >(&TCanvas::cd));
    t.method("cd", [](TCanvas& a)->TVirtualPad * { return a.cd(); });
    t.method("cd", [](TCanvas* a)->TVirtualPad * { return a->cd(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Clear(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Clear(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:118:22
    t.method("Clear", static_cast<void (TCanvas::*)(Option_t *) >(&TCanvas::Clear));
    t.method("Clear", [](TCanvas& a)->void { a.Clear(); });
    t.method("Clear", [](TCanvas* a)->void { a->Clear(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Close(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Close(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:119:22
    t.method("Close", static_cast<void (TCanvas::*)(Option_t *) >(&TCanvas::Close));
    t.method("Close", [](TCanvas& a)->void { a.Close(); });
    t.method("Close", [](TCanvas* a)->void { a->Close(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::Delete(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Delete(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:120:22
    t.method("Delete", static_cast<void (TCanvas::*)(Option_t *) >(&TCanvas::Delete));
    t.method("Delete", [](TCanvas& a)->void { a.Delete(); });
    t.method("Delete", [](TCanvas* a)->void { a->Delete(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::DisconnectWidget() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::DisconnectWidget()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:121:22
    t.method("DisconnectWidget", static_cast<void (TCanvas::*)() >(&TCanvas::DisconnectWidget));

    DEBUG_MSG("Adding wrapper for void TCanvas::Draw(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Draw(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:122:22
    t.method("Draw", static_cast<void (TCanvas::*)(Option_t *) >(&TCanvas::Draw));
    t.method("Draw", [](TCanvas& a)->void { a.Draw(); });
    t.method("Draw", [](TCanvas* a)->void { a->Draw(); });

    DEBUG_MSG("Adding wrapper for TObject * TCanvas::DrawClone(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TCanvas::DrawClone(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:123:22
    t.method("DrawClone", static_cast<TObject * (TCanvas::*)(Option_t *)  const>(&TCanvas::DrawClone));
    t.method("DrawClone", [](TCanvas const& a)->TObject * { return a.DrawClone(); });
    t.method("DrawClone", [](TCanvas const* a)->TObject * { return a->DrawClone(); });

    DEBUG_MSG("Adding wrapper for TObject * TCanvas::DrawClonePad() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TCanvas::DrawClonePad()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:124:22
    t.method("DrawClonePad", static_cast<TObject * (TCanvas::*)() >(&TCanvas::DrawClonePad));

    DEBUG_MSG("Adding wrapper for void TCanvas::EditorBar() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::EditorBar()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:125:22
    t.method("EditorBar", static_cast<void (TCanvas::*)() >(&TCanvas::EditorBar));

    DEBUG_MSG("Adding wrapper for void TCanvas::EmbedInto(Int_t, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::EmbedInto(Int_t, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:126:22
    t.method("EmbedInto", static_cast<void (TCanvas::*)(Int_t, Int_t, Int_t) >(&TCanvas::EmbedInto));

    DEBUG_MSG("Adding wrapper for void TCanvas::EnterLeave(TPad *, TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::EnterLeave(TPad *, TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:127:22
    t.method("EnterLeave", static_cast<void (TCanvas::*)(TPad *, TObject *) >(&TCanvas::EnterLeave));

    DEBUG_MSG("Adding wrapper for void TCanvas::FeedbackMode(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::FeedbackMode(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:128:22
    t.method("FeedbackMode", static_cast<void (TCanvas::*)(Bool_t) >(&TCanvas::FeedbackMode));

    DEBUG_MSG("Adding wrapper for void TCanvas::Flush() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Flush()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:129:22
    t.method("Flush", static_cast<void (TCanvas::*)() >(&TCanvas::Flush));

    DEBUG_MSG("Adding wrapper for void TCanvas::UseCurrentStyle() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::UseCurrentStyle()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:130:22
    t.method("UseCurrentStyle", static_cast<void (TCanvas::*)() >(&TCanvas::UseCurrentStyle));

    DEBUG_MSG("Adding wrapper for void TCanvas::ForceUpdate() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ForceUpdate()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:131:22
    t.method("ForceUpdate", static_cast<void (TCanvas::*)() >(&TCanvas::ForceUpdate));

    DEBUG_MSG("Adding wrapper for const char * TCanvas::GetDISPLAY() (" __HERE__ ")");
    // signature to use in the veto list: const char * TCanvas::GetDISPLAY()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:132:22
    t.method("GetDISPLAY", [](TCanvas const& a) { return (std::string)a.GetDISPLAY(); });
    t.method("GetDISPLAY", [](TCanvas const* a) { return (std::string)a->GetDISPLAY(); });

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetDoubleBuffer() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetDoubleBuffer()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:134:22
    t.method("GetDoubleBuffer", static_cast<Int_t (TCanvas::*)()  const>(&TCanvas::GetDoubleBuffer));

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetEvent() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetEvent()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:135:22
    t.method("GetEvent", static_cast<Int_t (TCanvas::*)()  const>(&TCanvas::GetEvent));

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetEventX() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetEventX()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:136:22
    t.method("GetEventX", static_cast<Int_t (TCanvas::*)()  const>(&TCanvas::GetEventX));

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetEventY() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetEventY()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:137:22
    t.method("GetEventY", static_cast<Int_t (TCanvas::*)()  const>(&TCanvas::GetEventY));

    DEBUG_MSG("Adding wrapper for Color_t TCanvas::GetHighLightColor() (" __HERE__ ")");
    // signature to use in the veto list: Color_t TCanvas::GetHighLightColor()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:138:22
    t.method("GetHighLightColor", static_cast<Color_t (TCanvas::*)()  const>(&TCanvas::GetHighLightColor));

    DEBUG_MSG("Adding wrapper for TVirtualPad * TCanvas::GetPadSave() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualPad * TCanvas::GetPadSave()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:139:22
    t.method("GetPadSave", static_cast<TVirtualPad * (TCanvas::*)()  const>(&TCanvas::GetPadSave));

    DEBUG_MSG("Adding wrapper for void TCanvas::ClearPadSave() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ClearPadSave()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:140:22
    t.method("ClearPadSave", static_cast<void (TCanvas::*)() >(&TCanvas::ClearPadSave));

    DEBUG_MSG("Adding wrapper for TObject * TCanvas::GetSelected() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TCanvas::GetSelected()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:141:22
    t.method("GetSelected", static_cast<TObject * (TCanvas::*)()  const>(&TCanvas::GetSelected));

    DEBUG_MSG("Adding wrapper for TObject * TCanvas::GetClickSelected() (" __HERE__ ")");
    // signature to use in the veto list: TObject * TCanvas::GetClickSelected()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:142:22
    t.method("GetClickSelected", static_cast<TObject * (TCanvas::*)()  const>(&TCanvas::GetClickSelected));

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetSelectedX() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetSelectedX()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:143:22
    t.method("GetSelectedX", static_cast<Int_t (TCanvas::*)()  const>(&TCanvas::GetSelectedX));

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetSelectedY() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetSelectedY()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:144:22
    t.method("GetSelectedY", static_cast<Int_t (TCanvas::*)()  const>(&TCanvas::GetSelectedY));

    DEBUG_MSG("Adding wrapper for Option_t * TCanvas::GetSelectedOpt() (" __HERE__ ")");
    // signature to use in the veto list: Option_t * TCanvas::GetSelectedOpt()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:145:22
    t.method("GetSelectedOpt", static_cast<Option_t * (TCanvas::*)()  const>(&TCanvas::GetSelectedOpt));

    DEBUG_MSG("Adding wrapper for TVirtualPad * TCanvas::GetSelectedPad() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualPad * TCanvas::GetSelectedPad()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:146:22
    t.method("GetSelectedPad", static_cast<TVirtualPad * (TCanvas::*)()  const>(&TCanvas::GetSelectedPad));

    DEBUG_MSG("Adding wrapper for TVirtualPad * TCanvas::GetClickSelectedPad() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualPad * TCanvas::GetClickSelectedPad()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:147:22
    t.method("GetClickSelectedPad", static_cast<TVirtualPad * (TCanvas::*)()  const>(&TCanvas::GetClickSelectedPad));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::GetShowEventStatus() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::GetShowEventStatus()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:148:22
    t.method("GetShowEventStatus", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::GetShowEventStatus));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::GetShowToolBar() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::GetShowToolBar()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:149:22
    t.method("GetShowToolBar", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::GetShowToolBar));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::GetShowEditor() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::GetShowEditor()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:150:22
    t.method("GetShowEditor", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::GetShowEditor));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::GetShowToolTips() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::GetShowToolTips()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:151:22
    t.method("GetShowToolTips", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::GetShowToolTips));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::GetAutoExec() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::GetAutoExec()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:152:22
    t.method("GetAutoExec", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::GetAutoExec));

    DEBUG_MSG("Adding wrapper for Size_t TCanvas::GetXsizeUser() (" __HERE__ ")");
    // signature to use in the veto list: Size_t TCanvas::GetXsizeUser()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:153:22
    t.method("GetXsizeUser", static_cast<Size_t (TCanvas::*)()  const>(&TCanvas::GetXsizeUser));

    DEBUG_MSG("Adding wrapper for Size_t TCanvas::GetYsizeUser() (" __HERE__ ")");
    // signature to use in the veto list: Size_t TCanvas::GetYsizeUser()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:154:22
    t.method("GetYsizeUser", static_cast<Size_t (TCanvas::*)()  const>(&TCanvas::GetYsizeUser));

    DEBUG_MSG("Adding wrapper for Size_t TCanvas::GetXsizeReal() (" __HERE__ ")");
    // signature to use in the veto list: Size_t TCanvas::GetXsizeReal()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:155:22
    t.method("GetXsizeReal", static_cast<Size_t (TCanvas::*)()  const>(&TCanvas::GetXsizeReal));

    DEBUG_MSG("Adding wrapper for Size_t TCanvas::GetYsizeReal() (" __HERE__ ")");
    // signature to use in the veto list: Size_t TCanvas::GetYsizeReal()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:156:22
    t.method("GetYsizeReal", static_cast<Size_t (TCanvas::*)()  const>(&TCanvas::GetYsizeReal));

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetCanvasID() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetCanvasID()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:157:22
    t.method("GetCanvasID", static_cast<Int_t (TCanvas::*)()  const>(&TCanvas::GetCanvasID));

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetWindowTopX() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetWindowTopX()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:159:22
    t.method("GetWindowTopX", static_cast<Int_t (TCanvas::*)() >(&TCanvas::GetWindowTopX));

    DEBUG_MSG("Adding wrapper for Int_t TCanvas::GetWindowTopY() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TCanvas::GetWindowTopY()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:160:22
    t.method("GetWindowTopY", static_cast<Int_t (TCanvas::*)() >(&TCanvas::GetWindowTopY));

    DEBUG_MSG("Adding wrapper for UInt_t TCanvas::GetWindowWidth() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TCanvas::GetWindowWidth()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:161:22
    t.method("GetWindowWidth", static_cast<UInt_t (TCanvas::*)()  const>(&TCanvas::GetWindowWidth));

    DEBUG_MSG("Adding wrapper for UInt_t TCanvas::GetWindowHeight() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TCanvas::GetWindowHeight()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:162:22
    t.method("GetWindowHeight", static_cast<UInt_t (TCanvas::*)()  const>(&TCanvas::GetWindowHeight));

    DEBUG_MSG("Adding wrapper for UInt_t TCanvas::GetWw() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TCanvas::GetWw()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:163:22
    t.method("GetWw", static_cast<UInt_t (TCanvas::*)()  const>(&TCanvas::GetWw));

    DEBUG_MSG("Adding wrapper for UInt_t TCanvas::GetWh() (" __HERE__ ")");
    // signature to use in the veto list: UInt_t TCanvas::GetWh()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:164:22
    t.method("GetWh", static_cast<UInt_t (TCanvas::*)()  const>(&TCanvas::GetWh));

    DEBUG_MSG("Adding wrapper for void TCanvas::GetCanvasPar(Int_t &, Int_t &, UInt_t &, UInt_t &) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::GetCanvasPar(Int_t &, Int_t &, UInt_t &, UInt_t &)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:165:22
    t.method("GetCanvasPar", static_cast<void (TCanvas::*)(Int_t &, Int_t &, UInt_t &, UInt_t &) >(&TCanvas::GetCanvasPar));

    DEBUG_MSG("Adding wrapper for void TCanvas::HandleInput(EEventType, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::HandleInput(EEventType, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:167:22
    t.method("HandleInput", static_cast<void (TCanvas::*)(EEventType, Int_t, Int_t) >(&TCanvas::HandleInput));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::HasMenuBar() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::HasMenuBar()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:168:22
    t.method("HasMenuBar", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::HasMenuBar));

    DEBUG_MSG("Adding wrapper for void TCanvas::HighlightConnect(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::HighlightConnect(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:169:22
    t.method("HighlightConnect", static_cast<void (TCanvas::*)(const char *) >(&TCanvas::HighlightConnect));

    DEBUG_MSG("Adding wrapper for void TCanvas::Iconify() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Iconify()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:170:22
    t.method("Iconify", static_cast<void (TCanvas::*)() >(&TCanvas::Iconify));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsBatch() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsBatch()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:171:22
    t.method("IsBatch", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::IsBatch));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsDrawn() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsDrawn()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:172:22
    t.method("IsDrawn", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::IsDrawn));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsUpdated() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsUpdated()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:173:22
    t.method("IsUpdated", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::IsUpdated));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsFolder()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:174:22
    t.method("IsFolder", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::IsFolder));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsGrayscale() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsGrayscale()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:175:22
    t.method("IsGrayscale", static_cast<Bool_t (TCanvas::*)() >(&TCanvas::IsGrayscale));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsRetained() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsRetained()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:176:22
    t.method("IsRetained", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::IsRetained));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::IsWeb() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::IsWeb()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:177:22
    t.method("IsWeb", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::IsWeb));

    DEBUG_MSG("Adding wrapper for void TCanvas::ls(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ls(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:178:22
    t.method("ls", static_cast<void (TCanvas::*)(Option_t *)  const>(&TCanvas::ls));
    t.method("ls", [](TCanvas const& a)->void { a.ls(); });
    t.method("ls", [](TCanvas const* a)->void { a->ls(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::MoveOpaque(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::MoveOpaque(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:179:22
    t.method("MoveOpaque", static_cast<void (TCanvas::*)(Int_t) >(&TCanvas::MoveOpaque));
    t.method("MoveOpaque", [](TCanvas& a)->void { a.MoveOpaque(); });
    t.method("MoveOpaque", [](TCanvas* a)->void { a->MoveOpaque(); });

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::OpaqueMoving() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::OpaqueMoving()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:180:22
    t.method("OpaqueMoving", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::OpaqueMoving));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::OpaqueResizing() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::OpaqueResizing()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:181:22
    t.method("OpaqueResizing", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::OpaqueResizing));

    DEBUG_MSG("Adding wrapper for void TCanvas::Paint(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Paint(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:182:22
    t.method("Paint", static_cast<void (TCanvas::*)(Option_t *) >(&TCanvas::Paint));
    t.method("Paint", [](TCanvas& a)->void { a.Paint(); });
    t.method("Paint", [](TCanvas* a)->void { a->Paint(); });

    DEBUG_MSG("Adding wrapper for TPad * TCanvas::Pick(Int_t, Int_t, TObjLink *&) (" __HERE__ ")");
    // signature to use in the veto list: TPad * TCanvas::Pick(Int_t, Int_t, TObjLink *&)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:183:22
    t.method("Pick", static_cast<TPad * (TCanvas::*)(Int_t, Int_t, TObjLink *&) >(&TCanvas::Pick));

    DEBUG_MSG("Adding wrapper for TPad * TCanvas::Pick(Int_t, Int_t, TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TPad * TCanvas::Pick(Int_t, Int_t, TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:184:22
    t.method("Pick", static_cast<TPad * (TCanvas::*)(Int_t, Int_t, TObject *) >(&TCanvas::Pick));

    DEBUG_MSG("Adding wrapper for void TCanvas::Picked(TPad *, TObject *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Picked(TPad *, TObject *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:185:22
    t.method("Picked", static_cast<void (TCanvas::*)(TPad *, TObject *, Int_t) >(&TCanvas::Picked));

    DEBUG_MSG("Adding wrapper for void TCanvas::Highlighted(TVirtualPad *, TObject *, Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Highlighted(TVirtualPad *, TObject *, Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:186:22
    t.method("Highlighted", static_cast<void (TCanvas::*)(TVirtualPad *, TObject *, Int_t, Int_t) >(&TCanvas::Highlighted));

    DEBUG_MSG("Adding wrapper for void TCanvas::ProcessedEvent(Int_t, Int_t, Int_t, TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ProcessedEvent(Int_t, Int_t, Int_t, TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:187:22
    t.method("ProcessedEvent", static_cast<void (TCanvas::*)(Int_t, Int_t, Int_t, TObject *) >(&TCanvas::ProcessedEvent));

    DEBUG_MSG("Adding wrapper for void TCanvas::Selected(TVirtualPad *, TObject *, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Selected(TVirtualPad *, TObject *, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:188:22
    t.method("Selected", static_cast<void (TCanvas::*)(TVirtualPad *, TObject *, Int_t) >(&TCanvas::Selected));

    DEBUG_MSG("Adding wrapper for void TCanvas::Cleared(TVirtualPad *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Cleared(TVirtualPad *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:189:22
    t.method("Cleared", static_cast<void (TCanvas::*)(TVirtualPad *) >(&TCanvas::Cleared));

    DEBUG_MSG("Adding wrapper for void TCanvas::Closed() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Closed()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:190:22
    t.method("Closed", static_cast<void (TCanvas::*)() >(&TCanvas::Closed));

    DEBUG_MSG("Adding wrapper for void TCanvas::RaiseWindow() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::RaiseWindow()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:191:22
    t.method("RaiseWindow", static_cast<void (TCanvas::*)() >(&TCanvas::RaiseWindow));

    DEBUG_MSG("Adding wrapper for void TCanvas::ResetDrawn() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ResetDrawn()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:192:22
    t.method("ResetDrawn", static_cast<void (TCanvas::*)() >(&TCanvas::ResetDrawn));

    DEBUG_MSG("Adding wrapper for void TCanvas::ResetUpdated() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ResetUpdated()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:193:22
    t.method("ResetUpdated", static_cast<void (TCanvas::*)() >(&TCanvas::ResetUpdated));

    DEBUG_MSG("Adding wrapper for void TCanvas::Resize(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Resize(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:194:22
    t.method("Resize", static_cast<void (TCanvas::*)(Option_t *) >(&TCanvas::Resize));
    t.method("Resize", [](TCanvas& a)->void { a.Resize(); });
    t.method("Resize", [](TCanvas* a)->void { a->Resize(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ResizeOpaque(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ResizeOpaque(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:195:22
    t.method("ResizeOpaque", static_cast<void (TCanvas::*)(Int_t) >(&TCanvas::ResizeOpaque));
    t.method("ResizeOpaque", [](TCanvas& a)->void { a.ResizeOpaque(); });
    t.method("ResizeOpaque", [](TCanvas* a)->void { a->ResizeOpaque(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SaveSource(const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SaveSource(const char *, Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:196:22
    t.method("SaveSource", static_cast<void (TCanvas::*)(const char *, Option_t *) >(&TCanvas::SaveSource));
    t.method("SaveSource", [](TCanvas& a)->void { a.SaveSource(); });
    t.method("SaveSource", [](TCanvas& a, const char * arg0)->void { a.SaveSource(arg0); });
    t.method("SaveSource", [](TCanvas* a)->void { a->SaveSource(); });
    t.method("SaveSource", [](TCanvas* a, const char * arg0)->void { a->SaveSource(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetCursor(ECursor) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetCursor(ECursor)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:198:22
    t.method("SetCursor", static_cast<void (TCanvas::*)(ECursor) >(&TCanvas::SetCursor));

    DEBUG_MSG("Adding wrapper for void TCanvas::SetDoubleBuffer(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetDoubleBuffer(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:199:22
    t.method("SetDoubleBuffer", static_cast<void (TCanvas::*)(Int_t) >(&TCanvas::SetDoubleBuffer));
    t.method("SetDoubleBuffer", [](TCanvas& a)->void { a.SetDoubleBuffer(); });
    t.method("SetDoubleBuffer", [](TCanvas* a)->void { a->SetDoubleBuffer(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetName(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:200:22
    t.method("SetName", static_cast<void (TCanvas::*)(const char *) >(&TCanvas::SetName));
    t.method("SetName", [](TCanvas& a)->void { a.SetName(); });
    t.method("SetName", [](TCanvas* a)->void { a->SetName(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetFixedAspectRatio(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetFixedAspectRatio(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:201:22
    t.method("SetFixedAspectRatio", static_cast<void (TCanvas::*)(Bool_t) >(&TCanvas::SetFixedAspectRatio));
    t.method("SetFixedAspectRatio", [](TCanvas& a)->void { a.SetFixedAspectRatio(); });
    t.method("SetFixedAspectRatio", [](TCanvas* a)->void { a->SetFixedAspectRatio(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetGrayscale(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetGrayscale(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:202:22
    t.method("SetGrayscale", static_cast<void (TCanvas::*)(Bool_t) >(&TCanvas::SetGrayscale));
    t.method("SetGrayscale", [](TCanvas& a)->void { a.SetGrayscale(); });
    t.method("SetGrayscale", [](TCanvas* a)->void { a->SetGrayscale(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetWindowPosition(Int_t, Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetWindowPosition(Int_t, Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:203:22
    t.method("SetWindowPosition", static_cast<void (TCanvas::*)(Int_t, Int_t) >(&TCanvas::SetWindowPosition));

    DEBUG_MSG("Adding wrapper for void TCanvas::SetWindowSize(UInt_t, UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetWindowSize(UInt_t, UInt_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:204:22
    t.method("SetWindowSize", static_cast<void (TCanvas::*)(UInt_t, UInt_t) >(&TCanvas::SetWindowSize));

    DEBUG_MSG("Adding wrapper for void TCanvas::SetCanvasSize(UInt_t, UInt_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetCanvasSize(UInt_t, UInt_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:206:22
    t.method("SetCanvasSize", static_cast<void (TCanvas::*)(UInt_t, UInt_t) >(&TCanvas::SetCanvasSize));

    DEBUG_MSG("Adding wrapper for void TCanvas::SetHighLightColor(Color_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetHighLightColor(Color_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:207:22
    t.method("SetHighLightColor", static_cast<void (TCanvas::*)(Color_t) >(&TCanvas::SetHighLightColor));

    DEBUG_MSG("Adding wrapper for void TCanvas::SetSelected(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetSelected(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:208:22
    t.method("SetSelected", static_cast<void (TCanvas::*)(TObject *) >(&TCanvas::SetSelected));

    DEBUG_MSG("Adding wrapper for void TCanvas::SetClickSelected(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetClickSelected(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:209:22
    t.method("SetClickSelected", static_cast<void (TCanvas::*)(TObject *) >(&TCanvas::SetClickSelected));

    DEBUG_MSG("Adding wrapper for void TCanvas::SetSelectedPad(TPad *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetSelectedPad(TPad *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:210:22
    t.method("SetSelectedPad", static_cast<void (TCanvas::*)(TPad *) >(&TCanvas::SetSelectedPad));

    DEBUG_MSG("Adding wrapper for void TCanvas::SetClickSelectedPad(TPad *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetClickSelectedPad(TPad *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:211:22
    t.method("SetClickSelectedPad", static_cast<void (TCanvas::*)(TPad *) >(&TCanvas::SetClickSelectedPad));

    DEBUG_MSG("Adding wrapper for void TCanvas::Show() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Show()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:212:22
    t.method("Show", static_cast<void (TCanvas::*)() >(&TCanvas::Show));

    DEBUG_MSG("Adding wrapper for void TCanvas::Size(Float_t, Float_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Size(Float_t, Float_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:213:22
    t.method("Size", static_cast<void (TCanvas::*)(Float_t, Float_t) >(&TCanvas::Size));
    t.method("Size", [](TCanvas& a)->void { a.Size(); });
    t.method("Size", [](TCanvas& a, Float_t arg0)->void { a.Size(arg0); });
    t.method("Size", [](TCanvas* a)->void { a->Size(); });
    t.method("Size", [](TCanvas* a, Float_t arg0)->void { a->Size(arg0); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetBatch(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetBatch(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:214:22
    t.method("SetBatch", static_cast<void (TCanvas::*)(Bool_t) >(&TCanvas::SetBatch));
    t.method("SetBatch", [](TCanvas& a)->void { a.SetBatch(); });
    t.method("SetBatch", [](TCanvas* a)->void { a->SetBatch(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetFolder(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetFolder(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:215:22
    module_.method("TCanvas!SetFolder", static_cast<void (*)(Bool_t) >(&TCanvas::SetFolder));
    module_.method("TCanvas!SetFolder", []()->void { TCanvas::SetFolder(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetPadSave(TPad *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetPadSave(TPad *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:216:22
    t.method("SetPadSave", static_cast<void (TCanvas::*)(TPad *) >(&TCanvas::SetPadSave));

    DEBUG_MSG("Adding wrapper for bool TCanvas::SetRealAspectRatio(const Int_t) (" __HERE__ ")");
    // signature to use in the veto list: bool TCanvas::SetRealAspectRatio(const Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:217:22
    t.method("SetRealAspectRatio", static_cast<bool (TCanvas::*)(const Int_t) >(&TCanvas::SetRealAspectRatio));
    t.method("SetRealAspectRatio", [](TCanvas& a)->bool { return a.SetRealAspectRatio(); });
    t.method("SetRealAspectRatio", [](TCanvas* a)->bool { return a->SetRealAspectRatio(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetRetained(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetRetained(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:218:22
    t.method("SetRetained", static_cast<void (TCanvas::*)(Bool_t) >(&TCanvas::SetRetained));
    t.method("SetRetained", [](TCanvas& a)->void { a.SetRetained(); });
    t.method("SetRetained", [](TCanvas* a)->void { a->SetRetained(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::SetTitle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetTitle(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:219:22
    t.method("SetTitle", static_cast<void (TCanvas::*)(const char *) >(&TCanvas::SetTitle));
    t.method("SetTitle", [](TCanvas& a)->void { a.SetTitle(); });
    t.method("SetTitle", [](TCanvas* a)->void { a->SetTitle(); });

    DEBUG_MSG("Adding wrapper for void TCanvas::ToggleEventStatus() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ToggleEventStatus()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:220:22
    t.method("ToggleEventStatus", static_cast<void (TCanvas::*)() >(&TCanvas::ToggleEventStatus));

    DEBUG_MSG("Adding wrapper for void TCanvas::ToggleAutoExec() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ToggleAutoExec()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:221:22
    t.method("ToggleAutoExec", static_cast<void (TCanvas::*)() >(&TCanvas::ToggleAutoExec));

    DEBUG_MSG("Adding wrapper for void TCanvas::ToggleToolBar() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ToggleToolBar()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:222:22
    t.method("ToggleToolBar", static_cast<void (TCanvas::*)() >(&TCanvas::ToggleToolBar));

    DEBUG_MSG("Adding wrapper for void TCanvas::ToggleEditor() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ToggleEditor()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:223:22
    t.method("ToggleEditor", static_cast<void (TCanvas::*)() >(&TCanvas::ToggleEditor));

    DEBUG_MSG("Adding wrapper for void TCanvas::ToggleToolTips() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::ToggleToolTips()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:224:22
    t.method("ToggleToolTips", static_cast<void (TCanvas::*)() >(&TCanvas::ToggleToolTips));

    DEBUG_MSG("Adding wrapper for void TCanvas::Update() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Update()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:225:22
    t.method("Update", static_cast<void (TCanvas::*)() >(&TCanvas::Update));

    DEBUG_MSG("Adding wrapper for void TCanvas::UpdateAsync() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::UpdateAsync()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:226:22
    t.method("UpdateAsync", static_cast<void (TCanvas::*)() >(&TCanvas::UpdateAsync));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::UseGL() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::UseGL()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:228:24
    t.method("UseGL", static_cast<Bool_t (TCanvas::*)()  const>(&TCanvas::UseGL));

    DEBUG_MSG("Adding wrapper for void TCanvas::SetSupportGL(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::SetSupportGL(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:229:24
    t.method("SetSupportGL", static_cast<void (TCanvas::*)(Bool_t) >(&TCanvas::SetSupportGL));

    DEBUG_MSG("Adding wrapper for void TCanvas::DeleteCanvasPainter() (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::DeleteCanvasPainter()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:231:24
    t.method("DeleteCanvasPainter", static_cast<void (TCanvas::*)() >(&TCanvas::DeleteCanvasPainter));

    DEBUG_MSG("Adding wrapper for TCanvas * TCanvas::MakeDefCanvas() (" __HERE__ ")");
    // signature to use in the veto list: TCanvas * TCanvas::MakeDefCanvas()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:233:22
    module_.method("TCanvas!MakeDefCanvas", static_cast<TCanvas * (*)() >(&TCanvas::MakeDefCanvas));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::SupportAlpha() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::SupportAlpha()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:234:22
    module_.method("TCanvas!SupportAlpha", static_cast<Bool_t (*)() >(&TCanvas::SupportAlpha));

    DEBUG_MSG("Adding wrapper for Bool_t TCanvas::SaveAll(const std::vector<TPad *> &, const char *, Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TCanvas::SaveAll(const std::vector<TPad *> &, const char *, Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:236:22
    module_.method("TCanvas!SaveAll", static_cast<Bool_t (*)(const std::vector<TPad *> &, const char *, Option_t *) >(&TCanvas::SaveAll));
    module_.method("TCanvas!SaveAll", []()->Bool_t { return TCanvas::SaveAll(); });
    module_.method("TCanvas!SaveAll", [](const std::vector<TPad *> & arg0)->Bool_t { return TCanvas::SaveAll(arg0); });
    module_.method("TCanvas!SaveAll", [](const std::vector<TPad *> & arg0, const char * arg1)->Bool_t { return TCanvas::SaveAll(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Version_t TCanvas::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TCanvas::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:238:4
    module_.method("TCanvas!Class_Version", static_cast<Version_t (*)() >(&TCanvas::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TCanvas::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TCanvas::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:238:4
    t.method("IsA", static_cast<TClass * (TCanvas::*)()  const>(&TCanvas::IsA));

    DEBUG_MSG("Adding wrapper for void TCanvas::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:238:4
    t.method("StreamerNVirtual", static_cast<void (TCanvas::*)(TBuffer &) >(&TCanvas::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TCanvas::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TCanvas::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:238:4
    module_.method("TCanvas!DeclFileName", []() { return (std::string)TCanvas::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TCanvas::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TCanvas::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:238:4
    module_.method("TCanvas!ImplFileLine", static_cast<int (*)() >(&TCanvas::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TCanvas::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TCanvas::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:238:4
    module_.method("TCanvas!ImplFileName", []() { return (std::string)TCanvas::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TCanvas::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TCanvas::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:238:4
    module_.method("TCanvas!Class_Name", []() { return (std::string)TCanvas::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TCanvas::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TCanvas::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:238:4
    module_.method("TCanvas!Dictionary", static_cast<TClass * (*)() >(&TCanvas::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TCanvas::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TCanvas::Class()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:238:4
    module_.method("TCanvas!Class", static_cast<TClass * (*)() >(&TCanvas::Class));

    DEBUG_MSG("Adding wrapper for void TCanvas::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TCanvas::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:238:4
    t.method("Streamer", static_cast<void (TCanvas::*)(TBuffer &) >(&TCanvas::Streamer));

    DEBUG_MSG("Adding wrapper for int TCanvas::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TCanvas::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TCanvas.h:238:4
    module_.method("TCanvas!DeclFileLine", static_cast<int (*)() >(&TCanvas::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TCanvas>> type_;
};
std::shared_ptr<Wrapper> newJlTCanvas(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTCanvas(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TObjLink> : std::false_type { };
  template<> struct DefaultConstructible<TObjLink> : std::false_type { };
}

// Class generating the wrapper for type TObjLink
// signature to use in the veto file: TObjLink
struct JlTObjLink: public Wrapper {

  JlTObjLink(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TObjLink (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TList.h:121:7
    jlcxx::TypeWrapper<TObjLink>  t = jlModule.add_type<TObjLink>("TObjLink");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TObjLink>>(new jlcxx::TypeWrapper<TObjLink>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TObjLink>> type_;
};
std::shared_ptr<Wrapper> newJlTObjLink(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTObjLink(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<TROOT> : std::false_type { };
  template<> struct DefaultConstructible<TROOT> : std::false_type { };
}

// Class generating the wrapper for type TROOT
// signature to use in the veto file: TROOT
struct JlTROOT: public Wrapper {

  JlTROOT(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type TROOT (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:94:7
    jlcxx::TypeWrapper<TROOT>  t = jlModule.add_type<TROOT>("TROOT");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<TROOT>>(new jlcxx::TypeWrapper<TROOT>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for void TROOT::AddClass(TClass *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::AddClass(TClass *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:191:22
    t.method("AddClass", static_cast<void (TROOT::*)(TClass *) >(&TROOT::AddClass));

    DEBUG_MSG("Adding wrapper for void TROOT::Append(TObject *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::Append(TObject *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:193:22
    t.method("Append", static_cast<void (TROOT::*)(TObject *, Bool_t) >(&TROOT::Append));
    t.method("Append", [](TROOT& a, TObject * arg0)->void { a.Append(arg0); });
    t.method("Append", [](TROOT* a, TObject * arg0)->void { a->Append(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::ClassSaved(TClass *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::ClassSaved(TClass *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:195:22
    t.method("ClassSaved", static_cast<Bool_t (TROOT::*)(TClass *) >(&TROOT::ClassSaved));

    DEBUG_MSG("Adding wrapper for void TROOT::CloseFiles() (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::CloseFiles()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:196:22
    t.method("CloseFiles", static_cast<void (TROOT::*)() >(&TROOT::CloseFiles));

    DEBUG_MSG("Adding wrapper for void TROOT::EndOfProcessCleanups() (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::EndOfProcessCleanups()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:197:22
    t.method("EndOfProcessCleanups", static_cast<void (TROOT::*)() >(&TROOT::EndOfProcessCleanups));

    DEBUG_MSG("Adding wrapper for TObject * TROOT::FindObject(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TROOT::FindObject(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:198:22
    t.method("FindObject", static_cast<TObject * (TROOT::*)(const char *)  const>(&TROOT::FindObject));

    DEBUG_MSG("Adding wrapper for TObject * TROOT::FindObject(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TROOT::FindObject(const TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:199:22
    t.method("FindObject", static_cast<TObject * (TROOT::*)(const TObject *)  const>(&TROOT::FindObject));

    DEBUG_MSG("Adding wrapper for TObject * TROOT::FindObjectAny(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TROOT::FindObjectAny(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:200:22
    t.method("FindObjectAny", static_cast<TObject * (TROOT::*)(const char *)  const>(&TROOT::FindObjectAny));

    DEBUG_MSG("Adding wrapper for TObject * TROOT::FindObjectAnyFile(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TROOT::FindObjectAnyFile(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:201:22
    t.method("FindObjectAnyFile", static_cast<TObject * (TROOT::*)(const char *)  const>(&TROOT::FindObjectAnyFile));

    DEBUG_MSG("Adding wrapper for TObject * TROOT::FindSpecialObject(const char *, void *&) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TROOT::FindSpecialObject(const char *, void *&)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:202:22
    t.method("FindSpecialObject", static_cast<TObject * (TROOT::*)(const char *, void *&) >(&TROOT::FindSpecialObject));

    DEBUG_MSG("Adding wrapper for const char * TROOT::FindObjectClassName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::FindObjectClassName(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:203:22
    t.method("FindObjectClassName", [](TROOT const& a, const char * arg0) { return (std::string)a.FindObjectClassName(arg0); });
    t.method("FindObjectClassName", [](TROOT const* a, const char * arg0) { return (std::string)a->FindObjectClassName(arg0); });

    DEBUG_MSG("Adding wrapper for const char * TROOT::FindObjectPathName(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::FindObjectPathName(const TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:204:22
    t.method("FindObjectPathName", [](TROOT const& a, const TObject * arg0) { return (std::string)a.FindObjectPathName(arg0); });
    t.method("FindObjectPathName", [](TROOT const* a, const TObject * arg0) { return (std::string)a->FindObjectPathName(arg0); });

    DEBUG_MSG("Adding wrapper for TClass * TROOT::FindSTLClass(const char *, Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TClass * TROOT::FindSTLClass(const char *, Bool_t, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:205:22
    t.method("FindSTLClass", static_cast<TClass * (TROOT::*)(const char *, Bool_t, Bool_t)  const>(&TROOT::FindSTLClass));
    t.method("FindSTLClass", [](TROOT const& a, const char * arg0, Bool_t arg1)->TClass * { return a.FindSTLClass(arg0, arg1); });
    t.method("FindSTLClass", [](TROOT const* a, const char * arg0, Bool_t arg1)->TClass * { return a->FindSTLClass(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void TROOT::ForceStyle(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::ForceStyle(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:206:22
    t.method("ForceStyle", static_cast<void (TROOT::*)(Bool_t) >(&TROOT::ForceStyle));
    t.method("ForceStyle", [](TROOT& a)->void { a.ForceStyle(); });
    t.method("ForceStyle", [](TROOT* a)->void { a->ForceStyle(); });

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::FromPopUp() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::FromPopUp()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:207:22
    t.method("FromPopUp", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::FromPopUp));

    DEBUG_MSG("Adding wrapper for TApplication * TROOT::GetApplication() (" __HERE__ ")");
    // signature to use in the veto list: TApplication * TROOT::GetApplication()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:209:22
    t.method("GetApplication", static_cast<TApplication * (TROOT::*)()  const>(&TROOT::GetApplication));

    DEBUG_MSG("Adding wrapper for TInterpreter * TROOT::GetInterpreter() (" __HERE__ ")");
    // signature to use in the veto list: TInterpreter * TROOT::GetInterpreter()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:210:22
    t.method("GetInterpreter", static_cast<TInterpreter * (TROOT::*)()  const>(&TROOT::GetInterpreter));

    DEBUG_MSG("Adding wrapper for TClass * TROOT::GetClass(const char *, Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TClass * TROOT::GetClass(const char *, Bool_t, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:211:22
    t.method("GetClass", static_cast<TClass * (TROOT::*)(const char *, Bool_t, Bool_t)  const>(&TROOT::GetClass));
    t.method("GetClass", [](TROOT const& a, const char * arg0)->TClass * { return a.GetClass(arg0); });
    t.method("GetClass", [](TROOT const& a, const char * arg0, Bool_t arg1)->TClass * { return a.GetClass(arg0, arg1); });
    t.method("GetClass", [](TROOT const* a, const char * arg0)->TClass * { return a->GetClass(arg0); });
    t.method("GetClass", [](TROOT const* a, const char * arg0, Bool_t arg1)->TClass * { return a->GetClass(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TClass * TROOT::GetClass(const std::type_info &, Bool_t, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TClass * TROOT::GetClass(const std::type_info &, Bool_t, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:212:22
    t.method("GetClass", static_cast<TClass * (TROOT::*)(const std::type_info &, Bool_t, Bool_t)  const>(&TROOT::GetClass));
    t.method("GetClass", [](TROOT const& a, const std::type_info & arg0)->TClass * { return a.GetClass(arg0); });
    t.method("GetClass", [](TROOT const& a, const std::type_info & arg0, Bool_t arg1)->TClass * { return a.GetClass(arg0, arg1); });
    t.method("GetClass", [](TROOT const* a, const std::type_info & arg0)->TClass * { return a->GetClass(arg0); });
    t.method("GetClass", [](TROOT const* a, const std::type_info & arg0, Bool_t arg1)->TClass * { return a->GetClass(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const char * TROOT::GetConfigOptions() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::GetConfigOptions()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:214:22
    t.method("GetConfigOptions", [](TROOT const& a) { return (std::string)a.GetConfigOptions(); });
    t.method("GetConfigOptions", [](TROOT const* a) { return (std::string)a->GetConfigOptions(); });

    DEBUG_MSG("Adding wrapper for const char * TROOT::GetConfigFeatures() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::GetConfigFeatures()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:215:22
    t.method("GetConfigFeatures", [](TROOT const& a) { return (std::string)a.GetConfigFeatures(); });
    t.method("GetConfigFeatures", [](TROOT const* a) { return (std::string)a->GetConfigFeatures(); });

    DEBUG_MSG("Adding wrapper for const char * TROOT::GetCutClassName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::GetCutClassName()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:216:22
    t.method("GetCutClassName", [](TROOT const& a) { return (std::string)a.GetCutClassName(); });
    t.method("GetCutClassName", [](TROOT const* a) { return (std::string)a->GetCutClassName(); });

    DEBUG_MSG("Adding wrapper for const char * TROOT::GetDefCanvasName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::GetDefCanvasName()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:217:22
    t.method("GetDefCanvasName", [](TROOT const& a) { return (std::string)a.GetDefCanvasName(); });
    t.method("GetDefCanvasName", [](TROOT const* a) { return (std::string)a->GetDefCanvasName(); });

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::GetEditHistograms() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::GetEditHistograms()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:218:22
    t.method("GetEditHistograms", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::GetEditHistograms));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::GetEditorMode() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::GetEditorMode()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:219:22
    t.method("GetEditorMode", static_cast<Int_t (TROOT::*)()  const>(&TROOT::GetEditorMode));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::GetForceStyle() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::GetForceStyle()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:220:22
    t.method("GetForceStyle", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::GetForceStyle));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::GetBuiltDate() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::GetBuiltDate()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:221:22
    t.method("GetBuiltDate", static_cast<Int_t (TROOT::*)()  const>(&TROOT::GetBuiltDate));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::GetBuiltTime() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::GetBuiltTime()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:222:22
    t.method("GetBuiltTime", static_cast<Int_t (TROOT::*)()  const>(&TROOT::GetBuiltTime));

    DEBUG_MSG("Adding wrapper for const char * TROOT::GetGitCommit() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::GetGitCommit()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:223:22
    t.method("GetGitCommit", [](TROOT const& a) { return (std::string)a.GetGitCommit(); });
    t.method("GetGitCommit", [](TROOT const* a) { return (std::string)a->GetGitCommit(); });

    DEBUG_MSG("Adding wrapper for const char * TROOT::GetGitBranch() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::GetGitBranch()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:224:22
    t.method("GetGitBranch", [](TROOT const& a) { return (std::string)a.GetGitBranch(); });
    t.method("GetGitBranch", [](TROOT const* a) { return (std::string)a->GetGitBranch(); });

    DEBUG_MSG("Adding wrapper for const char * TROOT::GetGitDate() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::GetGitDate()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:225:22
    t.method("GetGitDate", [](TROOT& a) { return (std::string)a.GetGitDate(); });
    t.method("GetGitDate", [](TROOT* a) { return (std::string)a->GetGitDate(); });

    DEBUG_MSG("Adding wrapper for Int_t TROOT::GetVersionDate() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::GetVersionDate()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:226:22
    t.method("GetVersionDate", static_cast<Int_t (TROOT::*)()  const>(&TROOT::GetVersionDate));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::GetVersionTime() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::GetVersionTime()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:227:22
    t.method("GetVersionTime", static_cast<Int_t (TROOT::*)()  const>(&TROOT::GetVersionTime));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::GetVersionInt() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::GetVersionInt()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:228:22
    t.method("GetVersionInt", static_cast<Int_t (TROOT::*)()  const>(&TROOT::GetVersionInt));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::GetVersionCode() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::GetVersionCode()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:229:22
    t.method("GetVersionCode", static_cast<Int_t (TROOT::*)()  const>(&TROOT::GetVersionCode));

    DEBUG_MSG("Adding wrapper for const char * TROOT::GetVersion() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::GetVersion()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:230:22
    t.method("GetVersion", [](TROOT const& a) { return (std::string)a.GetVersion(); });
    t.method("GetVersion", [](TROOT const* a) { return (std::string)a->GetVersion(); });

    DEBUG_MSG("Adding wrapper for TCollection * TROOT::GetListOfClasses() (" __HERE__ ")");
    // signature to use in the veto list: TCollection * TROOT::GetListOfClasses()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:231:22
    t.method("GetListOfClasses", static_cast<TCollection * (TROOT::*)()  const>(&TROOT::GetListOfClasses));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfColors() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfColors()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:232:22
    t.method("GetListOfColors", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfColors));

    DEBUG_MSG("Adding wrapper for TCollection * TROOT::GetListOfTypes(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TCollection * TROOT::GetListOfTypes(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:233:22
    t.method("GetListOfTypes", static_cast<TCollection * (TROOT::*)(Bool_t) >(&TROOT::GetListOfTypes));
    t.method("GetListOfTypes", [](TROOT& a)->TCollection * { return a.GetListOfTypes(); });
    t.method("GetListOfTypes", [](TROOT* a)->TCollection * { return a->GetListOfTypes(); });

    DEBUG_MSG("Adding wrapper for TCollection * TROOT::GetListOfGlobals(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TCollection * TROOT::GetListOfGlobals(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:234:22
    t.method("GetListOfGlobals", static_cast<TCollection * (TROOT::*)(Bool_t) >(&TROOT::GetListOfGlobals));
    t.method("GetListOfGlobals", [](TROOT& a)->TCollection * { return a.GetListOfGlobals(); });
    t.method("GetListOfGlobals", [](TROOT* a)->TCollection * { return a->GetListOfGlobals(); });

    DEBUG_MSG("Adding wrapper for TCollection * TROOT::GetListOfGlobalFunctions(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TCollection * TROOT::GetListOfGlobalFunctions(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:235:22
    t.method("GetListOfGlobalFunctions", static_cast<TCollection * (TROOT::*)(Bool_t) >(&TROOT::GetListOfGlobalFunctions));
    t.method("GetListOfGlobalFunctions", [](TROOT& a)->TCollection * { return a.GetListOfGlobalFunctions(); });
    t.method("GetListOfGlobalFunctions", [](TROOT* a)->TCollection * { return a->GetListOfGlobalFunctions(); });

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfClosedObjects() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfClosedObjects()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:236:22
    t.method("GetListOfClosedObjects", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfClosedObjects));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfFiles() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfFiles()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:237:22
    t.method("GetListOfFiles", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfFiles));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfMappedFiles() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfMappedFiles()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:238:22
    t.method("GetListOfMappedFiles", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfMappedFiles));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfSockets() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfSockets()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:239:22
    t.method("GetListOfSockets", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfSockets));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfCanvases() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfCanvases()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:240:22
    t.method("GetListOfCanvases", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfCanvases));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfStyles() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfStyles()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:241:22
    t.method("GetListOfStyles", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfStyles));

    DEBUG_MSG("Adding wrapper for TCollection * TROOT::GetListOfFunctions() (" __HERE__ ")");
    // signature to use in the veto list: TCollection * TROOT::GetListOfFunctions()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:242:22
    t.method("GetListOfFunctions", static_cast<TCollection * (TROOT::*)()  const>(&TROOT::GetListOfFunctions));

    DEBUG_MSG("Adding wrapper for TCollection * TROOT::GetListOfFunctionOverloads(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TCollection * TROOT::GetListOfFunctionOverloads(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:243:22
    t.method("GetListOfFunctionOverloads", static_cast<TCollection * (TROOT::*)(const char *)  const>(&TROOT::GetListOfFunctionOverloads));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfGeometries() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfGeometries()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:244:22
    t.method("GetListOfGeometries", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfGeometries));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfBrowsers() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfBrowsers()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:245:22
    t.method("GetListOfBrowsers", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfBrowsers));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfSpecials() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfSpecials()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:246:22
    t.method("GetListOfSpecials", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfSpecials));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfTasks() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfTasks()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:247:22
    t.method("GetListOfTasks", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfTasks));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfCleanups() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfCleanups()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:248:22
    t.method("GetListOfCleanups", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfCleanups));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfStreamerInfo() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfStreamerInfo()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:249:22
    t.method("GetListOfStreamerInfo", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfStreamerInfo));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfMessageHandlers() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfMessageHandlers()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:250:22
    t.method("GetListOfMessageHandlers", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfMessageHandlers));

    DEBUG_MSG("Adding wrapper for TCollection * TROOT::GetListOfClassGenerators() (" __HERE__ ")");
    // signature to use in the veto list: TCollection * TROOT::GetListOfClassGenerators()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:251:22
    t.method("GetListOfClassGenerators", static_cast<TCollection * (TROOT::*)()  const>(&TROOT::GetListOfClassGenerators));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfSecContexts() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfSecContexts()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:252:22
    t.method("GetListOfSecContexts", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfSecContexts));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfProofs() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfProofs()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:253:22
    t.method("GetListOfProofs", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfProofs));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetClipboard() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetClipboard()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:254:22
    t.method("GetClipboard", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetClipboard));

    DEBUG_MSG("Adding wrapper for TSeqCollection * TROOT::GetListOfDataSets() (" __HERE__ ")");
    // signature to use in the veto list: TSeqCollection * TROOT::GetListOfDataSets()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:255:22
    t.method("GetListOfDataSets", static_cast<TSeqCollection * (TROOT::*)()  const>(&TROOT::GetListOfDataSets));

    DEBUG_MSG("Adding wrapper for TCollection * TROOT::GetListOfEnums(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TCollection * TROOT::GetListOfEnums(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:256:22
    t.method("GetListOfEnums", static_cast<TCollection * (TROOT::*)(Bool_t) >(&TROOT::GetListOfEnums));
    t.method("GetListOfEnums", [](TROOT& a)->TCollection * { return a.GetListOfEnums(); });
    t.method("GetListOfEnums", [](TROOT* a)->TCollection * { return a->GetListOfEnums(); });

    DEBUG_MSG("Adding wrapper for TCollection * TROOT::GetListOfFunctionTemplates() (" __HERE__ ")");
    // signature to use in the veto list: TCollection * TROOT::GetListOfFunctionTemplates()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:257:22
    t.method("GetListOfFunctionTemplates", static_cast<TCollection * (TROOT::*)() >(&TROOT::GetListOfFunctionTemplates));

    DEBUG_MSG("Adding wrapper for TList * TROOT::GetListOfBrowsables() (" __HERE__ ")");
    // signature to use in the veto list: TList * TROOT::GetListOfBrowsables()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:258:22
    t.method("GetListOfBrowsables", static_cast<TList * (TROOT::*)()  const>(&TROOT::GetListOfBrowsables));

    DEBUG_MSG("Adding wrapper for TDataType * TROOT::GetType(const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TDataType * TROOT::GetType(const char *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:259:22
    t.method("GetType", static_cast<TDataType * (TROOT::*)(const char *, Bool_t)  const>(&TROOT::GetType));
    t.method("GetType", [](TROOT const& a, const char * arg0)->TDataType * { return a.GetType(arg0); });
    t.method("GetType", [](TROOT const* a, const char * arg0)->TDataType * { return a->GetType(arg0); });

    DEBUG_MSG("Adding wrapper for TFile * TROOT::GetFile() (" __HERE__ ")");
    // signature to use in the veto list: TFile * TROOT::GetFile()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:260:22
    t.method("GetFile", static_cast<TFile * (TROOT::*)()  const>(&TROOT::GetFile));

    DEBUG_MSG("Adding wrapper for TFile * TROOT::GetFile(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TFile * TROOT::GetFile(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:261:22
    t.method("GetFile", static_cast<TFile * (TROOT::*)(const char *)  const>(&TROOT::GetFile));

    DEBUG_MSG("Adding wrapper for TObject * TROOT::GetFunction(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TROOT::GetFunction(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:264:22
    t.method("GetFunction", static_cast<TObject * (TROOT::*)(const char *)  const>(&TROOT::GetFunction));

    DEBUG_MSG("Adding wrapper for TObject * TROOT::GetGeometry(const char *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TROOT::GetGeometry(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:269:22
    t.method("GetGeometry", static_cast<TObject * (TROOT::*)(const char *)  const>(&TROOT::GetGeometry));

    DEBUG_MSG("Adding wrapper for const TObject * TROOT::GetSelectedPrimitive() (" __HERE__ ")");
    // signature to use in the veto list: const TObject * TROOT::GetSelectedPrimitive()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:270:22
    t.method("GetSelectedPrimitive", static_cast<const TObject * (TROOT::*)()  const>(&TROOT::GetSelectedPrimitive));

    DEBUG_MSG("Adding wrapper for TVirtualPad * TROOT::GetSelectedPad() (" __HERE__ ")");
    // signature to use in the veto list: TVirtualPad * TROOT::GetSelectedPad()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:271:22
    t.method("GetSelectedPad", static_cast<TVirtualPad * (TROOT::*)()  const>(&TROOT::GetSelectedPad));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::GetNclasses() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::GetNclasses()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:272:22
    t.method("GetNclasses", static_cast<Int_t (TROOT::*)()  const>(&TROOT::GetNclasses));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::GetNtypes() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::GetNtypes()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:273:22
    t.method("GetNtypes", static_cast<Int_t (TROOT::*)()  const>(&TROOT::GetNtypes));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetWebDisplay() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetWebDisplay()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:276:22
    t.method("GetWebDisplay", static_cast<const TString & (TROOT::*)()  const>(&TROOT::GetWebDisplay));

    DEBUG_MSG("Adding wrapper for void TROOT::Idle(UInt_t, const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::Idle(UInt_t, const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:277:22
    t.method("Idle", static_cast<void (TROOT::*)(UInt_t, const char *) >(&TROOT::Idle));
    t.method("Idle", [](TROOT& a, UInt_t arg0)->void { a.Idle(arg0); });
    t.method("Idle", [](TROOT* a, UInt_t arg0)->void { a->Idle(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TROOT::IgnoreInclude(const char *, const char *) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::IgnoreInclude(const char *, const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:278:22
    t.method("IgnoreInclude", static_cast<Int_t (TROOT::*)(const char *, const char *) >(&TROOT::IgnoreInclude));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::IsBatch() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::IsBatch()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:279:22
    t.method("IsBatch", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::IsBatch));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::IsExecutingMacro() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::IsExecutingMacro()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:280:22
    t.method("IsExecutingMacro", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::IsExecutingMacro));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::IsFolder() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::IsFolder()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:281:22
    t.method("IsFolder", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::IsFolder));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::IsInterrupted() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::IsInterrupted()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:282:22
    t.method("IsInterrupted", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::IsInterrupted));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::IsEscaped() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::IsEscaped()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:283:22
    t.method("IsEscaped", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::IsEscaped));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::IsLineProcessing() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::IsLineProcessing()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:284:22
    t.method("IsLineProcessing", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::IsLineProcessing));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::IsProofServ() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::IsProofServ()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:285:22
    t.method("IsProofServ", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::IsProofServ));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::IsRootFile(const char *) (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::IsRootFile(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:286:22
    t.method("IsRootFile", static_cast<Bool_t (TROOT::*)(const char *)  const>(&TROOT::IsRootFile));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::IsWebDisplay() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::IsWebDisplay()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:287:22
    t.method("IsWebDisplay", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::IsWebDisplay));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::IsWebDisplayBatch() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::IsWebDisplayBatch()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:288:22
    t.method("IsWebDisplayBatch", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::IsWebDisplayBatch));

    DEBUG_MSG("Adding wrapper for void TROOT::ls(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::ls(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:289:22
    t.method("ls", static_cast<void (TROOT::*)(Option_t *)  const>(&TROOT::ls));
    t.method("ls", [](TROOT const& a)->void { a.ls(); });
    t.method("ls", [](TROOT const* a)->void { a->ls(); });

    DEBUG_MSG("Adding wrapper for Int_t TROOT::LoadClass(const char *, const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::LoadClass(const char *, const char *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:290:22
    t.method("LoadClass", static_cast<Int_t (TROOT::*)(const char *, const char *, Bool_t) >(&TROOT::LoadClass));
    t.method("LoadClass", [](TROOT& a, const char * arg0, const char * arg1)->Int_t { return a.LoadClass(arg0, arg1); });
    t.method("LoadClass", [](TROOT* a, const char * arg0, const char * arg1)->Int_t { return a->LoadClass(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TClass * TROOT::LoadClass(const char *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: TClass * TROOT::LoadClass(const char *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:291:22
    t.method("LoadClass", static_cast<TClass * (TROOT::*)(const char *, Bool_t)  const>(&TROOT::LoadClass));
    t.method("LoadClass", [](TROOT const& a, const char * arg0)->TClass * { return a.LoadClass(arg0); });
    t.method("LoadClass", [](TROOT const* a, const char * arg0)->TClass * { return a->LoadClass(arg0); });

    DEBUG_MSG("Adding wrapper for Int_t TROOT::LoadMacro(const char *, Int_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::LoadMacro(const char *, Int_t *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:292:22
    t.method("LoadMacro", static_cast<Int_t (TROOT::*)(const char *, Int_t *, Bool_t) >(&TROOT::LoadMacro));
    t.method("LoadMacro", [](TROOT& a, const char * arg0)->Int_t { return a.LoadMacro(arg0); });
    t.method("LoadMacro", [](TROOT& a, const char * arg0, Int_t * arg1)->Int_t { return a.LoadMacro(arg0, arg1); });
    t.method("LoadMacro", [](TROOT* a, const char * arg0)->Int_t { return a->LoadMacro(arg0); });
    t.method("LoadMacro", [](TROOT* a, const char * arg0, Int_t * arg1)->Int_t { return a->LoadMacro(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for Longptr_t TROOT::Macro(const char *, Int_t *, Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: Longptr_t TROOT::Macro(const char *, Int_t *, Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:293:22
    t.method("Macro", static_cast<Longptr_t (TROOT::*)(const char *, Int_t *, Bool_t) >(&TROOT::Macro));
    t.method("Macro", [](TROOT& a, const char * arg0)->Longptr_t { return a.Macro(arg0); });
    t.method("Macro", [](TROOT& a, const char * arg0, Int_t * arg1)->Longptr_t { return a.Macro(arg0, arg1); });
    t.method("Macro", [](TROOT* a, const char * arg0)->Longptr_t { return a->Macro(arg0); });
    t.method("Macro", [](TROOT* a, const char * arg0, Int_t * arg1)->Longptr_t { return a->Macro(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for TCanvas * TROOT::MakeDefCanvas() (" __HERE__ ")");
    // signature to use in the veto list: TCanvas * TROOT::MakeDefCanvas()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:294:22
    t.method("MakeDefCanvas", static_cast<TCanvas * (TROOT::*)()  const>(&TROOT::MakeDefCanvas));

    DEBUG_MSG("Adding wrapper for void TROOT::Message(Int_t, const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::Message(Int_t, const TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:295:22
    t.method("Message", static_cast<void (TROOT::*)(Int_t, const TObject *) >(&TROOT::Message));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::MustClean() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::MustClean()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:296:22
    t.method("MustClean", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::MustClean));

    DEBUG_MSG("Adding wrapper for Longptr_t TROOT::ProcessLine(const char *, Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: Longptr_t TROOT::ProcessLine(const char *, Int_t *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:297:22
    t.method("ProcessLine", static_cast<Longptr_t (TROOT::*)(const char *, Int_t *) >(&TROOT::ProcessLine));
    t.method("ProcessLine", [](TROOT& a, const char * arg0)->Longptr_t { return a.ProcessLine(arg0); });
    t.method("ProcessLine", [](TROOT* a, const char * arg0)->Longptr_t { return a->ProcessLine(arg0); });

    DEBUG_MSG("Adding wrapper for Longptr_t TROOT::ProcessLineSync(const char *, Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: Longptr_t TROOT::ProcessLineSync(const char *, Int_t *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:298:22
    t.method("ProcessLineSync", static_cast<Longptr_t (TROOT::*)(const char *, Int_t *) >(&TROOT::ProcessLineSync));
    t.method("ProcessLineSync", [](TROOT& a, const char * arg0)->Longptr_t { return a.ProcessLineSync(arg0); });
    t.method("ProcessLineSync", [](TROOT* a, const char * arg0)->Longptr_t { return a->ProcessLineSync(arg0); });

    DEBUG_MSG("Adding wrapper for Longptr_t TROOT::ProcessLineFast(const char *, Int_t *) (" __HERE__ ")");
    // signature to use in the veto list: Longptr_t TROOT::ProcessLineFast(const char *, Int_t *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:299:22
    t.method("ProcessLineFast", static_cast<Longptr_t (TROOT::*)(const char *, Int_t *) >(&TROOT::ProcessLineFast));
    t.method("ProcessLineFast", [](TROOT& a, const char * arg0)->Longptr_t { return a.ProcessLineFast(arg0); });
    t.method("ProcessLineFast", [](TROOT* a, const char * arg0)->Longptr_t { return a->ProcessLineFast(arg0); });

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::ReadingObject() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::ReadingObject()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:300:22
    t.method("ReadingObject", static_cast<Bool_t (TROOT::*)()  const>(&TROOT::ReadingObject));

    DEBUG_MSG("Adding wrapper for void TROOT::RecursiveRemove(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::RecursiveRemove(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:301:22
    t.method("RecursiveRemove", static_cast<void (TROOT::*)(TObject *) >(&TROOT::RecursiveRemove));

    DEBUG_MSG("Adding wrapper for void TROOT::RefreshBrowsers() (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::RefreshBrowsers()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:302:22
    t.method("RefreshBrowsers", static_cast<void (TROOT::*)() >(&TROOT::RefreshBrowsers));

    DEBUG_MSG("Adding wrapper for TObject * TROOT::Remove(TObject *) (" __HERE__ ")");
    // signature to use in the veto list: TObject * TROOT::Remove(TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:312:22
    t.method("Remove", static_cast<TObject * (TROOT::*)(TObject *) >(&TROOT::Remove));

    DEBUG_MSG("Adding wrapper for void TROOT::RemoveClass(TClass *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::RemoveClass(TClass *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:313:22
    t.method("RemoveClass", static_cast<void (TROOT::*)(TClass *) >(&TROOT::RemoveClass));

    DEBUG_MSG("Adding wrapper for void TROOT::Reset(Option_t *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::Reset(Option_t *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:314:22
    t.method("Reset", static_cast<void (TROOT::*)(Option_t *) >(&TROOT::Reset));
    t.method("Reset", [](TROOT& a)->void { a.Reset(); });
    t.method("Reset", [](TROOT* a)->void { a->Reset(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SaveContext() (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SaveContext()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:315:22
    t.method("SaveContext", static_cast<void (TROOT::*)() >(&TROOT::SaveContext));

    DEBUG_MSG("Adding wrapper for void TROOT::SetApplication(TApplication *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetApplication(TApplication *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:316:22
    t.method("SetApplication", static_cast<void (TROOT::*)(TApplication *) >(&TROOT::SetApplication));

    DEBUG_MSG("Adding wrapper for void TROOT::SetBatch(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetBatch(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:318:22
    t.method("SetBatch", static_cast<void (TROOT::*)(Bool_t) >(&TROOT::SetBatch));
    t.method("SetBatch", [](TROOT& a)->void { a.SetBatch(); });
    t.method("SetBatch", [](TROOT* a)->void { a->SetBatch(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetWebDisplay(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetWebDisplay(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:319:22
    t.method("SetWebDisplay", static_cast<void (TROOT::*)(const char *) >(&TROOT::SetWebDisplay));
    t.method("SetWebDisplay", [](TROOT& a)->void { a.SetWebDisplay(); });
    t.method("SetWebDisplay", [](TROOT* a)->void { a->SetWebDisplay(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetCutClassName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetCutClassName(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:320:22
    t.method("SetCutClassName", static_cast<void (TROOT::*)(const char *) >(&TROOT::SetCutClassName));
    t.method("SetCutClassName", [](TROOT& a)->void { a.SetCutClassName(); });
    t.method("SetCutClassName", [](TROOT* a)->void { a->SetCutClassName(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetDefCanvasName(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetDefCanvasName(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:321:22
    t.method("SetDefCanvasName", static_cast<void (TROOT::*)(const char *) >(&TROOT::SetDefCanvasName));
    t.method("SetDefCanvasName", [](TROOT& a)->void { a.SetDefCanvasName(); });
    t.method("SetDefCanvasName", [](TROOT* a)->void { a->SetDefCanvasName(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetEditHistograms(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetEditHistograms(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:322:22
    t.method("SetEditHistograms", static_cast<void (TROOT::*)(Bool_t) >(&TROOT::SetEditHistograms));
    t.method("SetEditHistograms", [](TROOT& a)->void { a.SetEditHistograms(); });
    t.method("SetEditHistograms", [](TROOT* a)->void { a->SetEditHistograms(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetEditorMode(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetEditorMode(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:323:22
    t.method("SetEditorMode", static_cast<void (TROOT::*)(const char *) >(&TROOT::SetEditorMode));
    t.method("SetEditorMode", [](TROOT& a)->void { a.SetEditorMode(); });
    t.method("SetEditorMode", [](TROOT* a)->void { a->SetEditorMode(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetExecutingMacro(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetExecutingMacro(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:324:22
    t.method("SetExecutingMacro", static_cast<void (TROOT::*)(Bool_t) >(&TROOT::SetExecutingMacro));
    t.method("SetExecutingMacro", [](TROOT& a)->void { a.SetExecutingMacro(); });
    t.method("SetExecutingMacro", [](TROOT* a)->void { a->SetExecutingMacro(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetFromPopUp(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetFromPopUp(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:325:22
    t.method("SetFromPopUp", static_cast<void (TROOT::*)(Bool_t) >(&TROOT::SetFromPopUp));
    t.method("SetFromPopUp", [](TROOT& a)->void { a.SetFromPopUp(); });
    t.method("SetFromPopUp", [](TROOT* a)->void { a->SetFromPopUp(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetInterrupt(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetInterrupt(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:326:22
    t.method("SetInterrupt", static_cast<void (TROOT::*)(Bool_t) >(&TROOT::SetInterrupt));
    t.method("SetInterrupt", [](TROOT& a)->void { a.SetInterrupt(); });
    t.method("SetInterrupt", [](TROOT* a)->void { a->SetInterrupt(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetEscape(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetEscape(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:327:22
    t.method("SetEscape", static_cast<void (TROOT::*)(Bool_t) >(&TROOT::SetEscape));
    t.method("SetEscape", [](TROOT& a)->void { a.SetEscape(); });
    t.method("SetEscape", [](TROOT* a)->void { a->SetEscape(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetLineIsProcessing() (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetLineIsProcessing()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:328:22
    t.method("SetLineIsProcessing", static_cast<void (TROOT::*)() >(&TROOT::SetLineIsProcessing));

    DEBUG_MSG("Adding wrapper for void TROOT::SetLineHasBeenProcessed() (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetLineHasBeenProcessed()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:329:22
    t.method("SetLineHasBeenProcessed", static_cast<void (TROOT::*)() >(&TROOT::SetLineHasBeenProcessed));

    DEBUG_MSG("Adding wrapper for void TROOT::SetReadingObject(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetReadingObject(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:330:22
    t.method("SetReadingObject", static_cast<void (TROOT::*)(Bool_t) >(&TROOT::SetReadingObject));
    t.method("SetReadingObject", [](TROOT& a)->void { a.SetReadingObject(); });
    t.method("SetReadingObject", [](TROOT* a)->void { a->SetReadingObject(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetMustClean(Bool_t) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetMustClean(Bool_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:331:22
    t.method("SetMustClean", static_cast<void (TROOT::*)(Bool_t) >(&TROOT::SetMustClean));
    t.method("SetMustClean", [](TROOT& a)->void { a.SetMustClean(); });
    t.method("SetMustClean", [](TROOT* a)->void { a->SetMustClean(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetSelectedPrimitive(const TObject *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetSelectedPrimitive(const TObject *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:332:22
    t.method("SetSelectedPrimitive", static_cast<void (TROOT::*)(const TObject *) >(&TROOT::SetSelectedPrimitive));

    DEBUG_MSG("Adding wrapper for void TROOT::SetSelectedPad(TVirtualPad *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetSelectedPad(TVirtualPad *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:333:22
    t.method("SetSelectedPad", static_cast<void (TROOT::*)(TVirtualPad *) >(&TROOT::SetSelectedPad));

    DEBUG_MSG("Adding wrapper for void TROOT::SetStyle(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetStyle(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:334:22
    t.method("SetStyle", static_cast<void (TROOT::*)(const char *) >(&TROOT::SetStyle));
    t.method("SetStyle", [](TROOT& a)->void { a.SetStyle(); });
    t.method("SetStyle", [](TROOT* a)->void { a->SetStyle(); });

    DEBUG_MSG("Adding wrapper for void TROOT::Time(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::Time(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:335:22
    t.method("Time", static_cast<void (TROOT::*)(Int_t) >(&TROOT::Time));
    t.method("Time", [](TROOT& a)->void { a.Time(); });
    t.method("Time", [](TROOT* a)->void { a->Time(); });

    DEBUG_MSG("Adding wrapper for Int_t TROOT::Timer() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::Timer()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:336:22
    t.method("Timer", static_cast<Int_t (TROOT::*)()  const>(&TROOT::Timer));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::DecreaseDirLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::DecreaseDirLevel()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:339:23
    module_.method("TROOT!DecreaseDirLevel", static_cast<Int_t (*)() >(&TROOT::DecreaseDirLevel));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::GetDirLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::GetDirLevel()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:340:23
    module_.method("TROOT!GetDirLevel", static_cast<Int_t (*)() >(&TROOT::GetDirLevel));

    DEBUG_MSG("Adding wrapper for const char * TROOT::GetMacroPath() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::GetMacroPath()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:341:23
    module_.method("TROOT!GetMacroPath", []() { return (std::string)TROOT::GetMacroPath(); });

    DEBUG_MSG("Adding wrapper for void TROOT::SetMacroPath(const char *) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetMacroPath(const char *)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:342:23
    module_.method("TROOT!SetMacroPath", static_cast<void (*)(const char *) >(&TROOT::SetMacroPath));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::IncreaseDirLevel() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::IncreaseDirLevel()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:343:23
    module_.method("TROOT!IncreaseDirLevel", static_cast<Int_t (*)() >(&TROOT::IncreaseDirLevel));

    DEBUG_MSG("Adding wrapper for void TROOT::IndentLevel() (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::IndentLevel()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:344:23
    module_.method("TROOT!IndentLevel", static_cast<void (*)() >(&TROOT::IndentLevel));

    DEBUG_MSG("Adding wrapper for void TROOT::Initialize() (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::Initialize()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:345:23
    module_.method("TROOT!Initialize", static_cast<void (*)() >(&TROOT::Initialize));

    DEBUG_MSG("Adding wrapper for Bool_t TROOT::Initialized() (" __HERE__ ")");
    // signature to use in the veto list: Bool_t TROOT::Initialized()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:346:23
    module_.method("TROOT!Initialized", static_cast<Bool_t (*)() >(&TROOT::Initialized));

    DEBUG_MSG("Adding wrapper for void TROOT::SetDirLevel(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::SetDirLevel(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:347:23
    module_.method("TROOT!SetDirLevel", static_cast<void (*)(Int_t) >(&TROOT::SetDirLevel));
    module_.method("TROOT!SetDirLevel", []()->void { TROOT::SetDirLevel(); });

    DEBUG_MSG("Adding wrapper for Int_t TROOT::ConvertVersionCode2Int(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::ConvertVersionCode2Int(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:348:23
    module_.method("TROOT!ConvertVersionCode2Int", static_cast<Int_t (*)(Int_t) >(&TROOT::ConvertVersionCode2Int));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::ConvertVersionInt2Code(Int_t) (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::ConvertVersionInt2Code(Int_t)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:349:23
    module_.method("TROOT!ConvertVersionInt2Code", static_cast<Int_t (*)(Int_t) >(&TROOT::ConvertVersionInt2Code));

    DEBUG_MSG("Adding wrapper for Int_t TROOT::RootVersionCode() (" __HERE__ ")");
    // signature to use in the veto list: Int_t TROOT::RootVersionCode()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:350:23
    module_.method("TROOT!RootVersionCode", static_cast<Int_t (*)() >(&TROOT::RootVersionCode));

    DEBUG_MSG("Adding wrapper for const std::vector<std::string> & TROOT::AddExtraInterpreterArgs(const std::vector<std::string> &) (" __HERE__ ")");
    // signature to use in the veto list: const std::vector<std::string> & TROOT::AddExtraInterpreterArgs(const std::vector<std::string> &)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:351:43
    module_.method("TROOT!AddExtraInterpreterArgs", static_cast<const std::vector<std::string> & (*)(const std::vector<std::string> &) >(&TROOT::AddExtraInterpreterArgs));

    DEBUG_MSG("Adding wrapper for const char **& TROOT::GetExtraInterpreterArgs() (" __HERE__ ")");
    // signature to use in the veto list: const char **& TROOT::GetExtraInterpreterArgs()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:352:24
    module_.method("TROOT!GetExtraInterpreterArgs", static_cast<const char **& (*)() >(&TROOT::GetExtraInterpreterArgs));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetRootSys() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetRootSys()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:354:26
    module_.method("TROOT!GetRootSys", static_cast<const TString & (*)() >(&TROOT::GetRootSys));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetBinDir() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetBinDir()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:355:26
    module_.method("TROOT!GetBinDir", static_cast<const TString & (*)() >(&TROOT::GetBinDir));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetLibDir() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetLibDir()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:356:26
    module_.method("TROOT!GetLibDir", static_cast<const TString & (*)() >(&TROOT::GetLibDir));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetSharedLibDir() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetSharedLibDir()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:357:26
    module_.method("TROOT!GetSharedLibDir", static_cast<const TString & (*)() >(&TROOT::GetSharedLibDir));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetIncludeDir() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetIncludeDir()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:358:26
    module_.method("TROOT!GetIncludeDir", static_cast<const TString & (*)() >(&TROOT::GetIncludeDir));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetEtcDir() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetEtcDir()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:359:26
    module_.method("TROOT!GetEtcDir", static_cast<const TString & (*)() >(&TROOT::GetEtcDir));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetDataDir() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetDataDir()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:360:26
    module_.method("TROOT!GetDataDir", static_cast<const TString & (*)() >(&TROOT::GetDataDir));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetDocDir() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetDocDir()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:361:26
    module_.method("TROOT!GetDocDir", static_cast<const TString & (*)() >(&TROOT::GetDocDir));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetMacroDir() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetMacroDir()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:362:26
    module_.method("TROOT!GetMacroDir", static_cast<const TString & (*)() >(&TROOT::GetMacroDir));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetTutorialDir() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetTutorialDir()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:363:26
    module_.method("TROOT!GetTutorialDir", static_cast<const TString & (*)() >(&TROOT::GetTutorialDir));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetSourceDir() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetSourceDir()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:364:26
    module_.method("TROOT!GetSourceDir", static_cast<const TString & (*)() >(&TROOT::GetSourceDir));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetIconPath() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetIconPath()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:365:26
    module_.method("TROOT!GetIconPath", static_cast<const TString & (*)() >(&TROOT::GetIconPath));

    DEBUG_MSG("Adding wrapper for const TString & TROOT::GetTTFFontDir() (" __HERE__ ")");
    // signature to use in the veto list: const TString & TROOT::GetTTFFontDir()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:366:26
    module_.method("TROOT!GetTTFFontDir", static_cast<const TString & (*)() >(&TROOT::GetTTFFontDir));

    DEBUG_MSG("Adding wrapper for const char * TROOT::GetTutorialsDir() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::GetTutorialsDir()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:369:23
    module_.method("TROOT!GetTutorialsDir", []() { return (std::string)TROOT::GetTutorialsDir(); });

    DEBUG_MSG("Adding wrapper for void TROOT::ShutDown() (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::ShutDown()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:370:16
    module_.method("TROOT!ShutDown", static_cast<void (*)() >(&TROOT::ShutDown));

    DEBUG_MSG("Adding wrapper for Version_t TROOT::Class_Version() (" __HERE__ ")");
    // signature to use in the veto list: Version_t TROOT::Class_Version()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:372:4
    module_.method("TROOT!Class_Version", static_cast<Version_t (*)() >(&TROOT::Class_Version));

    DEBUG_MSG("Adding wrapper for TClass * TROOT::IsA() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TROOT::IsA()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:372:4
    t.method("IsA", static_cast<TClass * (TROOT::*)()  const>(&TROOT::IsA));

    DEBUG_MSG("Adding wrapper for void TROOT::StreamerNVirtual(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::StreamerNVirtual(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:372:4
    t.method("StreamerNVirtual", static_cast<void (TROOT::*)(TBuffer &) >(&TROOT::StreamerNVirtual));

    DEBUG_MSG("Adding wrapper for const char * TROOT::DeclFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::DeclFileName()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:372:4
    module_.method("TROOT!DeclFileName", []() { return (std::string)TROOT::DeclFileName(); });

    DEBUG_MSG("Adding wrapper for int TROOT::ImplFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TROOT::ImplFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:372:4
    module_.method("TROOT!ImplFileLine", static_cast<int (*)() >(&TROOT::ImplFileLine));

    DEBUG_MSG("Adding wrapper for const char * TROOT::ImplFileName() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::ImplFileName()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:372:4
    module_.method("TROOT!ImplFileName", []() { return (std::string)TROOT::ImplFileName(); });

    DEBUG_MSG("Adding wrapper for const char * TROOT::Class_Name() (" __HERE__ ")");
    // signature to use in the veto list: const char * TROOT::Class_Name()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:372:4
    module_.method("TROOT!Class_Name", []() { return (std::string)TROOT::Class_Name(); });

    DEBUG_MSG("Adding wrapper for TClass * TROOT::Dictionary() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TROOT::Dictionary()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:372:4
    module_.method("TROOT!Dictionary", static_cast<TClass * (*)() >(&TROOT::Dictionary));

    DEBUG_MSG("Adding wrapper for TClass * TROOT::Class() (" __HERE__ ")");
    // signature to use in the veto list: TClass * TROOT::Class()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:372:4
    module_.method("TROOT!Class", static_cast<TClass * (*)() >(&TROOT::Class));

    DEBUG_MSG("Adding wrapper for void TROOT::Streamer(TBuffer &) (" __HERE__ ")");
    // signature to use in the veto list: void TROOT::Streamer(TBuffer &)
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:372:4
    t.method("Streamer", static_cast<void (TROOT::*)(TBuffer &) >(&TROOT::Streamer));

    DEBUG_MSG("Adding wrapper for int TROOT::DeclFileLine() (" __HERE__ ")");
    // signature to use in the veto list: int TROOT::DeclFileLine()
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:372:4
    module_.method("TROOT!DeclFileLine", static_cast<int (*)() >(&TROOT::DeclFileLine));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<TROOT>> type_;
};
std::shared_ptr<Wrapper> newJlTROOT(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlTROOT(module));
}

namespace jlcxx {
  template<> struct IsMirroredType<ROOT::Internal::TParBranchProcessingRAII> : std::false_type { };
  template<> struct DefaultConstructible<ROOT::Internal::TParBranchProcessingRAII> : std::false_type { };
}

// Class generating the wrapper for type ROOT::Internal::TParBranchProcessingRAII
// signature to use in the veto file: ROOT::Internal::TParBranchProcessingRAII
struct JlROOT_Internal_TParBranchProcessingRAII: public Wrapper {

  JlROOT_Internal_TParBranchProcessingRAII(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type ROOT::Internal::TParBranchProcessingRAII (" __HERE__ ")");
    // defined in /home/pgras/.julia/conda/3/include/TROOT.h:75:10
    jlcxx::TypeWrapper<ROOT::Internal::TParBranchProcessingRAII>  t = jlModule.add_type<ROOT::Internal::TParBranchProcessingRAII>("ROOT!Internal!TParBranchProcessingRAII");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<ROOT::Internal::TParBranchProcessingRAII>>(new jlcxx::TypeWrapper<ROOT::Internal::TParBranchProcessingRAII>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<ROOT::Internal::TParBranchProcessingRAII>> type_;
};
std::shared_ptr<Wrapper> newJlROOT_Internal_TParBranchProcessingRAII(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlROOT_Internal_TParBranchProcessingRAII(module));
}
